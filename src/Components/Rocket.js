/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 rocket.gltf --transform 
Files: rocket.gltf [2.74MB] > rocket-transformed.glb [10.38MB] (-280%)
Author: AyoubBani (https://sketchfab.com/AyoubBani)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rocket-b17a0f9f805c4fa7b978829006bbb57f
Title: Rocket
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/rocket-transformed.glb')

  const tl = useRef()
  const rocketRef = useRef()
  const scroll = useScroll()

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline()
    tl.current.from(
      rocketRef.current.rotation,
      {
        duration: 2,
        x: 0,
        y: 0,
        z: 0,
      },
      0.4
    )

    tl.current.to(
      rocketRef.current.position,
      {
        duration: 1.2,
        x: 0.1,  //-1
        y: 0, //0
        z: 2, //-3
      },
      0
    )

    tl.current.to(
      rocketRef.current.position,
      {
        duration: 1,
        x: 0.5,  //-1
        y: -0.1, //0
        z: 10, //-3
      },
      1.8
    )
  })

  return (
    <group {...props} dispose={null}>
      <group ref={rocketRef} position={[2,2,4]} scale={0.2} rotation={[Math.PI/3,1,0]}>
        <mesh geometry={nodes.Cylinder_white_0.geometry} material={materials.PaletteMaterial001}/>
        <pointLight intensity={20} color={"#ffffff"} position={[5,5,5]}/>
        {/*<ambientLight intensity={2} color={"#a9a9a9"}/>*/}
      </group>
    </group>
  )
}

useGLTF.preload('/rocket-transformed.glb')

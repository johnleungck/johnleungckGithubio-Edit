/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.7 oceanGlobe.gltf --transform
Author: LoÃ¯c Norgeot (https://sketchfab.com/norgeotloic)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/oceanic-currents-ef072f0ded9f4b1a8bb44a6ba536a1bb
Title: Oceanic Currents
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import * as THREE from 'three'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/oceanGlobe-transformed.glb')

  const landPointsMaterial = new THREE.PointsMaterial({
    size: 0.04,
    sizeAttenuation: true,
    color: "#959595",
    map: materials['Scene_-_Root'].map,
  })

  const seaPointsMaterial = new THREE.PointsMaterial({
    size: 0.02,
    color: "#98b1df",
    sizeAttenuation: true,
    map: materials['Scene_-_Root'].map,
  })

  const tl = useRef()
  const globeRef = useRef()
  const scroll = useScroll()

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline()

    tl.current.from(
      globeRef.current.rotation,
      {
        duration: 1,
        x: -Math.PI/2,
        y: 0,
        z: -Math.PI/3,
      },
      0
    )

    tl.current.to(
      globeRef.current.position,
      {
        duration: 1,
        x: -1,
        z: -3, //3
      },
      0
    )
  })
  
  return (
    <group {...props} dispose={null}>
      <group ref={globeRef} rotation={[-Math.PI/2.5, 0, -Math.PI/1.15]}>
        <points geometry={nodes.Object_4.geometry} material={landPointsMaterial} />
        <points geometry={nodes.Object_35.geometry} material={seaPointsMaterial} />
        <mesh position={[-0.4, 0.81, 0.41]}>
          <sphereGeometry args={[0.015, 16, 16]} />
          <meshBasicMaterial color="#d398c4" />
        </mesh>
        <mesh position={[0, 0, 0]}>
          <sphereGeometry args={[0.99, 32, 32]} />
          <meshBasicMaterial color="#000000" transparent={true} opacity={0.6}/>
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/oceanGlobe-transformed.glb')